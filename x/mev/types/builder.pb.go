// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/mev/v1alpha1/builder.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Builder represents an off-chain builder, used by the builder module.
type Builder struct {
	// address is the address of the builder's pub key
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// pubkey is the pub key of the builder
	Pubkey *types.Any `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// moniker is a human-readable name for the validator.
	Moniker string `protobuf:"bytes,3,opt,name=moniker,proto3" json:"moniker,omitempty"`
	// builder_api_version is the version of the builder API this builder operates
	BuilderApiVersion string `protobuf:"bytes,4,opt,name=builder_api_version,json=builderApiVersion,proto3" json:"builder_api_version,omitempty"`
	// builder_api_url is the URL of the builder API this builder operates
	BuilderApiUrl string `protobuf:"bytes,5,opt,name=builder_api_url,json=builderApiUrl,proto3" json:"builder_api_url,omitempty"`
	// security_contact defines an optional email for security contact.
	SecurityContact string `protobuf:"bytes,6,opt,name=security_contact,json=securityContact,proto3" json:"security_contact,omitempty"`
}

func (m *Builder) Reset()         { *m = Builder{} }
func (m *Builder) String() string { return proto.CompactTextString(m) }
func (*Builder) ProtoMessage()    {}
func (*Builder) Descriptor() ([]byte, []int) {
	return fileDescriptor_8aac68a2a7606999, []int{0}
}
func (m *Builder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Builder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Builder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Builder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Builder.Merge(m, src)
}
func (m *Builder) XXX_Size() int {
	return m.Size()
}
func (m *Builder) XXX_DiscardUnknown() {
	xxx_messageInfo_Builder.DiscardUnknown(m)
}

var xxx_messageInfo_Builder proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Builder)(nil), "cosmos.mev.v1alpha1.Builder")
}

func init() { proto.RegisterFile("cosmos/mev/v1alpha1/builder.proto", fileDescriptor_8aac68a2a7606999) }

var fileDescriptor_8aac68a2a7606999 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x3f, 0x4e, 0xe3, 0x40,
	0x14, 0xc6, 0xed, 0xec, 0x6e, 0xb2, 0x3b, 0xab, 0x55, 0x76, 0x9d, 0x14, 0x93, 0x14, 0x4e, 0x96,
	0x02, 0x85, 0x22, 0x63, 0x25, 0x74, 0x74, 0x31, 0x12, 0x0d, 0x0d, 0x0a, 0x82, 0x82, 0xc6, 0xf2,
	0x9f, 0xc1, 0x19, 0xc5, 0xf6, 0x58, 0x33, 0x63, 0x0b, 0xdf, 0x80, 0x92, 0x23, 0xe4, 0x00, 0x94,
	0x1c, 0x02, 0x51, 0x45, 0x54, 0x94, 0x28, 0x69, 0x38, 0x06, 0xca, 0xcc, 0x58, 0xa1, 0xf2, 0x7b,
	0xef, 0xfb, 0xf9, 0x7b, 0x4f, 0xdf, 0x80, 0xff, 0x21, 0xe5, 0x29, 0xe5, 0x4e, 0x8a, 0x4b, 0xa7,
	0x9c, 0xf8, 0x49, 0xbe, 0xf0, 0x27, 0x4e, 0x50, 0x90, 0x24, 0xc2, 0x0c, 0xe5, 0x8c, 0x0a, 0x6a,
	0x75, 0x14, 0x82, 0x52, 0x5c, 0xa2, 0x1a, 0xe9, 0xf7, 0x62, 0x4a, 0xe3, 0x04, 0x3b, 0x12, 0x09,
	0x8a, 0x5b, 0xc7, 0xcf, 0x2a, 0xc5, 0xf7, 0xbb, 0x31, 0x8d, 0xa9, 0x2c, 0x9d, 0x5d, 0xa5, 0xa7,
	0x3d, 0xe5, 0xe2, 0x29, 0x41, 0x5b, 0xca, 0xe6, 0xe0, 0xb1, 0x01, 0x5a, 0xae, 0x5a, 0x69, 0x4d,
	0x41, 0xcb, 0x8f, 0x22, 0x86, 0x39, 0x87, 0xe6, 0xd0, 0x1c, 0xfd, 0x72, 0xe1, 0xeb, 0xd3, 0xb8,
	0xab, 0xf1, 0x99, 0x52, 0x2e, 0x05, 0x23, 0x59, 0x3c, 0xaf, 0x41, 0xeb, 0x0c, 0x34, 0xf3, 0x22,
	0x58, 0xe2, 0x0a, 0x36, 0x86, 0xe6, 0xe8, 0xf7, 0xb4, 0x8b, 0xd4, 0x71, 0xa8, 0x3e, 0x0e, 0xcd,
	0xb2, 0xca, 0x85, 0x2f, 0x7b, 0xa3, 0x90, 0x55, 0xb9, 0xa0, 0xe8, 0xa2, 0x08, 0xce, 0x71, 0x35,
	0xd7, 0x7f, 0x5b, 0x10, 0xb4, 0x52, 0x9a, 0x91, 0x25, 0x66, 0xf0, 0xdb, 0x6e, 0xf7, 0xbc, 0x6e,
	0x2d, 0x04, 0x3a, 0x3a, 0x13, 0xcf, 0xcf, 0x89, 0x57, 0x62, 0xc6, 0x09, 0xcd, 0xe0, 0x77, 0x49,
	0xfd, 0xd3, 0xd2, 0x2c, 0x27, 0xd7, 0x4a, 0xb0, 0x0e, 0x41, 0xfb, 0x2b, 0x5f, 0xb0, 0x04, 0xfe,
	0x90, 0xec, 0x9f, 0x3d, 0x7b, 0xc5, 0x12, 0xeb, 0x08, 0xfc, 0xe5, 0x38, 0x2c, 0x18, 0x11, 0x95,
	0x17, 0xd2, 0x4c, 0xf8, 0xa1, 0x80, 0x4d, 0x09, 0xb6, 0xeb, 0xf9, 0xa9, 0x1a, 0x9f, 0xfc, 0xbc,
	0x5f, 0x0d, 0x8c, 0x8f, 0xd5, 0xc0, 0x70, 0xdd, 0xe7, 0x8d, 0x6d, 0xae, 0x37, 0xb6, 0xf9, 0xbe,
	0xb1, 0xcd, 0x87, 0xad, 0x6d, 0xac, 0xb7, 0xb6, 0xf1, 0xb6, 0xb5, 0x8d, 0x9b, 0x51, 0x4c, 0xc4,
	0xa2, 0x08, 0x50, 0x48, 0x53, 0x9d, 0xb0, 0xfe, 0x8c, 0x79, 0xb4, 0x74, 0xee, 0xe4, 0x23, 0x8b,
	0x2a, 0xc7, 0x3c, 0x68, 0xca, 0x68, 0x8e, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x0f, 0xaa,
	0x15, 0xff, 0x01, 0x00, 0x00,
}

func (m *Builder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Builder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Builder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SecurityContact) > 0 {
		i -= len(m.SecurityContact)
		copy(dAtA[i:], m.SecurityContact)
		i = encodeVarintBuilder(dAtA, i, uint64(len(m.SecurityContact)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BuilderApiUrl) > 0 {
		i -= len(m.BuilderApiUrl)
		copy(dAtA[i:], m.BuilderApiUrl)
		i = encodeVarintBuilder(dAtA, i, uint64(len(m.BuilderApiUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BuilderApiVersion) > 0 {
		i -= len(m.BuilderApiVersion)
		copy(dAtA[i:], m.BuilderApiVersion)
		i = encodeVarintBuilder(dAtA, i, uint64(len(m.BuilderApiVersion)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintBuilder(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintBuilder(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintBuilder(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintBuilder(dAtA []byte, offset int, v uint64) int {
	offset -= sovBuilder(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Builder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovBuilder(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovBuilder(uint64(l))
	}
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovBuilder(uint64(l))
	}
	l = len(m.BuilderApiVersion)
	if l > 0 {
		n += 1 + l + sovBuilder(uint64(l))
	}
	l = len(m.BuilderApiUrl)
	if l > 0 {
		n += 1 + l + sovBuilder(uint64(l))
	}
	l = len(m.SecurityContact)
	if l > 0 {
		n += 1 + l + sovBuilder(uint64(l))
	}
	return n
}

func sovBuilder(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBuilder(x uint64) (n int) {
	return sovBuilder(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Builder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBuilder
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Builder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Builder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuilder
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuilder
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBuilder
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBuilder
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuilder
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuilder
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderApiVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuilder
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuilder
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderApiVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuilder
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuilder
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityContact", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBuilder
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBuilder
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecurityContact = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBuilder(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthBuilder
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBuilder(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBuilder
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBuilder
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBuilder
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBuilder
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBuilder
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBuilder        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBuilder          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBuilder = fmt.Errorf("proto: unexpected end of group")
)
