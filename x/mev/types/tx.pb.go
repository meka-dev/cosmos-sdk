// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmos/mev/v1alpha1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/codec/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgRegisterBuilder defines a SDK message for registering an off-chain builder.
type MsgRegisterBuilder struct {
	// address is the address of the builder's pub key
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// pubkey is the pub key of the builder
	Pubkey *types.Any `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// moniker is a human-readable name for the validator.
	Moniker string `protobuf:"bytes,3,opt,name=moniker,proto3" json:"moniker,omitempty"`
	// builder_api_version is the version of the builder API this builder operates
	BuilderApiVersion string `protobuf:"bytes,4,opt,name=builder_api_version,json=builderApiVersion,proto3" json:"builder_api_version,omitempty"`
	// builder_api_url is the URL of the builder API this builder operates
	BuilderApiUrl string `protobuf:"bytes,5,opt,name=builder_api_url,json=builderApiUrl,proto3" json:"builder_api_url,omitempty"`
	// security_contact defines an optional email for security contact.
	SecurityContact string `protobuf:"bytes,6,opt,name=security_contact,json=securityContact,proto3" json:"security_contact,omitempty"`
}

func (m *MsgRegisterBuilder) Reset()         { *m = MsgRegisterBuilder{} }
func (m *MsgRegisterBuilder) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterBuilder) ProtoMessage()    {}
func (*MsgRegisterBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{0}
}
func (m *MsgRegisterBuilder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterBuilder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterBuilder.Merge(m, src)
}
func (m *MsgRegisterBuilder) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterBuilder proto.InternalMessageInfo

// MsgRegisterBuilderResponse defines the response to MsgRegisterBuilder.
type MsgRegisterBuilderResponse struct {
}

func (m *MsgRegisterBuilderResponse) Reset()         { *m = MsgRegisterBuilderResponse{} }
func (m *MsgRegisterBuilderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterBuilderResponse) ProtoMessage()    {}
func (*MsgRegisterBuilderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{1}
}
func (m *MsgRegisterBuilderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterBuilderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterBuilderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterBuilderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterBuilderResponse.Merge(m, src)
}
func (m *MsgRegisterBuilderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterBuilderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterBuilderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterBuilderResponse proto.InternalMessageInfo

// MsgEditBuilder defines a SDK message for editing an off-chain builder.
type MsgEditBuilder struct {
	// address is the address of the builder's pub key
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// moniker is a human-readable name for the validator.
	Moniker string `protobuf:"bytes,2,opt,name=moniker,proto3" json:"moniker,omitempty"`
	// builder_api_version is the version of the builder API this builder operates
	BuilderApiVersion string `protobuf:"bytes,3,opt,name=builder_api_version,json=builderApiVersion,proto3" json:"builder_api_version,omitempty"`
	// builder_api_url is the URL of the builder API this builder operates
	BuilderApiUrl string `protobuf:"bytes,4,opt,name=builder_api_url,json=builderApiUrl,proto3" json:"builder_api_url,omitempty"`
	// security_contact defines an optional email for security contact.
	SecurityContact string `protobuf:"bytes,5,opt,name=security_contact,json=securityContact,proto3" json:"security_contact,omitempty"`
}

func (m *MsgEditBuilder) Reset()         { *m = MsgEditBuilder{} }
func (m *MsgEditBuilder) String() string { return proto.CompactTextString(m) }
func (*MsgEditBuilder) ProtoMessage()    {}
func (*MsgEditBuilder) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{2}
}
func (m *MsgEditBuilder) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditBuilder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditBuilder.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditBuilder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditBuilder.Merge(m, src)
}
func (m *MsgEditBuilder) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditBuilder) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditBuilder.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditBuilder proto.InternalMessageInfo

// MsgEditBuilderResponse defines the response to MsgEditBuilder.
type MsgEditBuilderResponse struct {
}

func (m *MsgEditBuilderResponse) Reset()         { *m = MsgEditBuilderResponse{} }
func (m *MsgEditBuilderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditBuilderResponse) ProtoMessage()    {}
func (*MsgEditBuilderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{3}
}
func (m *MsgEditBuilderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditBuilderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditBuilderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditBuilderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditBuilderResponse.Merge(m, src)
}
func (m *MsgEditBuilderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditBuilderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditBuilderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditBuilderResponse proto.InternalMessageInfo

// MsgRegisterProposer defines the SDK message for registering a proposer
// in off-chain building.
type MsgRegisterProposer struct {
	// address is the address of the proposer's builder module pub key
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// pubkey is the pub key of the proposer used by the builder module to sign
	// requests and commitments.
	Pubkey *types.Any `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// operator_address is the address of the proposer's operator key (i.e. staking key)
	OperatorAddress string `protobuf:"bytes,3,opt,name=operator_address,json=operatorAddress,proto3" json:"operator_address,omitempty"`
	// operator_pubkey is the operator pub key of the proposer that is used to sign registration and
	// establish a chain of trust
	OperatorPubkey *types.Any `protobuf:"bytes,4,opt,name=operator_pubkey,json=operatorPubkey,proto3" json:"operator_pubkey,omitempty"`
}

func (m *MsgRegisterProposer) Reset()         { *m = MsgRegisterProposer{} }
func (m *MsgRegisterProposer) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterProposer) ProtoMessage()    {}
func (*MsgRegisterProposer) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{4}
}
func (m *MsgRegisterProposer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterProposer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterProposer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterProposer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterProposer.Merge(m, src)
}
func (m *MsgRegisterProposer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterProposer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterProposer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterProposer proto.InternalMessageInfo

// MsgRegisterProposerResponse defines the response to MsgRegisterProposer
type MsgRegisterProposerResponse struct {
}

func (m *MsgRegisterProposerResponse) Reset()         { *m = MsgRegisterProposerResponse{} }
func (m *MsgRegisterProposerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterProposerResponse) ProtoMessage()    {}
func (*MsgRegisterProposerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{5}
}
func (m *MsgRegisterProposerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterProposerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterProposerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterProposerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterProposerResponse.Merge(m, src)
}
func (m *MsgRegisterProposerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterProposerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterProposerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterProposerResponse proto.InternalMessageInfo

// MsgCommitSegment defines the SDK message for off-chain segment commitment
// which is verified by validators after a proposal.
type MsgCommitSegment struct {
	// builder_address is the address of the builder's pub key.
	BuilderAddress string `protobuf:"bytes,1,opt,name=builder_address,json=builderAddress,proto3" json:"builder_address,omitempty"`
	// commitment is the mutually signed segment commitment
	Commitment SegmentCommitment `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment"`
}

func (m *MsgCommitSegment) Reset()         { *m = MsgCommitSegment{} }
func (m *MsgCommitSegment) String() string { return proto.CompactTextString(m) }
func (*MsgCommitSegment) ProtoMessage()    {}
func (*MsgCommitSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{6}
}
func (m *MsgCommitSegment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCommitSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCommitSegment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCommitSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCommitSegment.Merge(m, src)
}
func (m *MsgCommitSegment) XXX_Size() int {
	return m.Size()
}
func (m *MsgCommitSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCommitSegment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCommitSegment proto.InternalMessageInfo

type MsgCommitSegmentResponse struct {
}

func (m *MsgCommitSegmentResponse) Reset()         { *m = MsgCommitSegmentResponse{} }
func (m *MsgCommitSegmentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCommitSegmentResponse) ProtoMessage()    {}
func (*MsgCommitSegmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{7}
}
func (m *MsgCommitSegmentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCommitSegmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCommitSegmentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCommitSegmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCommitSegmentResponse.Merge(m, src)
}
func (m *MsgCommitSegmentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCommitSegmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCommitSegmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCommitSegmentResponse proto.InternalMessageInfo

// MsgReportProposer defines the SDK message for a builder to report
// evidence a proposer didn't honour its commitment.
type MsgReportProposer struct {
	// builder_address is the address of the builder's pub key.
	BuilderAddress string `protobuf:"bytes,1,opt,name=builder_address,json=builderAddress,proto3" json:"builder_address,omitempty"`
	// commitment is the mutually signed segment commitment
	Commitment SegmentCommitment `protobuf:"bytes,2,opt,name=commitment,proto3" json:"commitment"`
}

func (m *MsgReportProposer) Reset()         { *m = MsgReportProposer{} }
func (m *MsgReportProposer) String() string { return proto.CompactTextString(m) }
func (*MsgReportProposer) ProtoMessage()    {}
func (*MsgReportProposer) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{8}
}
func (m *MsgReportProposer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReportProposer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReportProposer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReportProposer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReportProposer.Merge(m, src)
}
func (m *MsgReportProposer) XXX_Size() int {
	return m.Size()
}
func (m *MsgReportProposer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReportProposer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReportProposer proto.InternalMessageInfo

type MsgReportProposerResponse struct {
}

func (m *MsgReportProposerResponse) Reset()         { *m = MsgReportProposerResponse{} }
func (m *MsgReportProposerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReportProposerResponse) ProtoMessage()    {}
func (*MsgReportProposerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{9}
}
func (m *MsgReportProposerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReportProposerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReportProposerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReportProposerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReportProposerResponse.Merge(m, src)
}
func (m *MsgReportProposerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReportProposerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReportProposerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReportProposerResponse proto.InternalMessageInfo

// MsgUpdateParams is the Msg/UpdateParams request type.
type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/mev parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{10}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b3ffa4946257cd6, []int{11}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterBuilder)(nil), "cosmos.mev.v1alpha1.MsgRegisterBuilder")
	proto.RegisterType((*MsgRegisterBuilderResponse)(nil), "cosmos.mev.v1alpha1.MsgRegisterBuilderResponse")
	proto.RegisterType((*MsgEditBuilder)(nil), "cosmos.mev.v1alpha1.MsgEditBuilder")
	proto.RegisterType((*MsgEditBuilderResponse)(nil), "cosmos.mev.v1alpha1.MsgEditBuilderResponse")
	proto.RegisterType((*MsgRegisterProposer)(nil), "cosmos.mev.v1alpha1.MsgRegisterProposer")
	proto.RegisterType((*MsgRegisterProposerResponse)(nil), "cosmos.mev.v1alpha1.MsgRegisterProposerResponse")
	proto.RegisterType((*MsgCommitSegment)(nil), "cosmos.mev.v1alpha1.MsgCommitSegment")
	proto.RegisterType((*MsgCommitSegmentResponse)(nil), "cosmos.mev.v1alpha1.MsgCommitSegmentResponse")
	proto.RegisterType((*MsgReportProposer)(nil), "cosmos.mev.v1alpha1.MsgReportProposer")
	proto.RegisterType((*MsgReportProposerResponse)(nil), "cosmos.mev.v1alpha1.MsgReportProposerResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "cosmos.mev.v1alpha1.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "cosmos.mev.v1alpha1.MsgUpdateParamsResponse")
}

func init() { proto.RegisterFile("cosmos/mev/v1alpha1/tx.proto", fileDescriptor_5b3ffa4946257cd6) }

var fileDescriptor_5b3ffa4946257cd6 = []byte{
	// 804 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0x3d, 0x6f, 0xdb, 0x46,
	0x18, 0x16, 0x25, 0x59, 0x86, 0x5f, 0xd7, 0x92, 0x4c, 0x0b, 0x35, 0x45, 0xdb, 0xb2, 0xa1, 0xba,
	0xae, 0xfa, 0x61, 0xb2, 0x76, 0x81, 0x02, 0xd5, 0x26, 0x09, 0xed, 0xd2, 0x0a, 0x10, 0x64, 0xb8,
	0x05, 0xba, 0x08, 0x94, 0x74, 0xa5, 0x08, 0x89, 0x3c, 0xe2, 0xee, 0x28, 0x58, 0x6b, 0xa7, 0x8e,
	0x1d, 0xfa, 0x03, 0xfc, 0x13, 0x3a, 0xe4, 0x0f, 0x24, 0x59, 0x8c, 0x0c, 0x81, 0x91, 0x29, 0x53,
	0x10, 0xd8, 0x43, 0xf2, 0x0f, 0x92, 0x31, 0x10, 0x79, 0xa4, 0xa8, 0x2f, 0x98, 0x4e, 0x86, 0x20,
	0x93, 0xa8, 0x7b, 0x9f, 0x7b, 0x9f, 0x0f, 0xdc, 0xbd, 0x24, 0xec, 0x76, 0x30, 0x35, 0x31, 0x55,
	0x4d, 0x34, 0x54, 0x87, 0x27, 0xda, 0xc0, 0xee, 0x69, 0x27, 0x2a, 0xbb, 0x50, 0x6c, 0x82, 0x19,
	0x16, 0xb7, 0xbc, 0xaa, 0x62, 0xa2, 0xa1, 0xe2, 0x57, 0xe5, 0xbc, 0x8e, 0xb1, 0x3e, 0x40, 0xaa,
	0x0b, 0x69, 0x3b, 0x7f, 0xa9, 0x9a, 0x35, 0xf2, 0xf0, 0x72, 0x4e, 0xc7, 0x3a, 0x76, 0x1f, 0xd5,
	0xf1, 0x13, 0x5f, 0xcd, 0x7b, 0x5d, 0x5a, 0x5e, 0x81, 0xb7, 0xf4, 0x4a, 0xdb, 0x3e, 0x3d, 0xd5,
	0xd5, 0xe1, 0xc9, 0xf8, 0x87, 0x17, 0x0e, 0x17, 0xe9, 0xea, 0x60, 0xd3, 0x34, 0x98, 0x89, 0x2c,
	0xc6, 0x51, 0x07, 0x8b, 0x50, 0xb6, 0x46, 0x34, 0x93, 0x13, 0x14, 0x1f, 0xc7, 0x41, 0xac, 0x53,
	0xbd, 0x89, 0x74, 0x83, 0x32, 0x44, 0xaa, 0x8e, 0x31, 0xe8, 0x22, 0x22, 0x9e, 0xc2, 0xaa, 0xd6,
	0xed, 0x12, 0x44, 0xa9, 0x24, 0x1c, 0x08, 0xa5, 0xb5, 0xaa, 0xf4, 0xec, 0xc1, 0x71, 0x8e, 0x4b,
	0xab, 0x78, 0x95, 0x33, 0x46, 0x0c, 0x4b, 0x6f, 0xfa, 0x40, 0xf1, 0x17, 0x48, 0xd9, 0x4e, 0xbb,
	0x8f, 0x46, 0x52, 0xfc, 0x40, 0x28, 0xad, 0x9f, 0xe6, 0x14, 0x2f, 0x08, 0xc5, 0x0f, 0x42, 0xa9,
	0x58, 0xa3, 0xaa, 0xf4, 0x64, 0xd2, 0xa8, 0x43, 0x46, 0x36, 0xc3, 0x4a, 0xc3, 0x69, 0xff, 0x8a,
	0x46, 0x4d, 0xbe, 0x5b, 0x94, 0x60, 0xd5, 0xc4, 0x96, 0xd1, 0x47, 0x44, 0x4a, 0x8c, 0xb9, 0x9b,
	0xfe, 0x5f, 0x51, 0x81, 0xad, 0xb6, 0x27, 0xb0, 0xa5, 0xd9, 0x46, 0x6b, 0x88, 0x08, 0x35, 0xb0,
	0x25, 0x25, 0x5d, 0xd4, 0x26, 0x2f, 0x55, 0x6c, 0xe3, 0x77, 0xaf, 0x20, 0x1e, 0x41, 0x26, 0x8c,
	0x77, 0xc8, 0x40, 0x5a, 0x71, 0xb1, 0x1b, 0x13, 0xec, 0x39, 0x19, 0x88, 0x5f, 0x43, 0x96, 0xa2,
	0x8e, 0x43, 0x0c, 0x36, 0x6a, 0x75, 0xb0, 0xc5, 0xb4, 0x0e, 0x93, 0x52, 0x2e, 0x30, 0xe3, 0xaf,
	0xd7, 0xbc, 0xe5, 0x72, 0xee, 0x9f, 0xcb, 0xfd, 0xd8, 0xeb, 0xcb, 0xfd, 0xd8, 0xdf, 0xaf, 0xfe,
	0xff, 0xc6, 0xb7, 0x5e, 0xdc, 0x05, 0x79, 0x3e, 0xc4, 0x26, 0xa2, 0x36, 0xb6, 0x28, 0x2a, 0xbe,
	0x11, 0x20, 0x5d, 0xa7, 0xfa, 0xcf, 0x5d, 0x83, 0x7d, 0x48, 0xbe, 0xa1, 0x5c, 0xe2, 0x91, 0x72,
	0x49, 0xdc, 0x23, 0x97, 0x64, 0xd4, 0x5c, 0x56, 0xee, 0x93, 0x8b, 0x04, 0x9f, 0x4f, 0x1b, 0x0f,
	0x32, 0x79, 0x1a, 0x87, 0xad, 0x50, 0x64, 0x0d, 0x82, 0x6d, 0x4c, 0x3f, 0xf2, 0xc1, 0xab, 0x41,
	0x16, 0xdb, 0x88, 0x68, 0x0c, 0x93, 0x96, 0x2f, 0x22, 0x71, 0x87, 0x88, 0x8c, 0xbf, 0x83, 0x2f,
	0x8b, 0x7f, 0x40, 0xb0, 0xd4, 0xe2, 0xaa, 0x92, 0xef, 0xa5, 0x2a, 0xed, 0xb7, 0x69, 0xb8, 0x5d,
	0xca, 0x7b, 0xe1, 0x84, 0xe7, 0x84, 0x16, 0xf7, 0x60, 0x67, 0x41, 0x9e, 0x41, 0xde, 0x0f, 0x05,
	0xc8, 0xd6, 0xa9, 0x5e, 0x73, 0x27, 0xc4, 0x19, 0xd2, 0xc7, 0x43, 0x42, 0xac, 0x84, 0xce, 0x41,
	0xc4, 0xd0, 0xd3, 0xfe, 0x09, 0xe1, 0x76, 0x7f, 0x03, 0x98, 0x4c, 0x1d, 0x9e, 0xff, 0x91, 0xb2,
	0x60, 0x2c, 0x2a, 0x9c, 0xb4, 0x16, 0xa0, 0xab, 0xc9, 0xab, 0x17, 0xfb, 0xb1, 0x66, 0x68, 0x7f,
	0x79, 0x37, 0xec, 0x71, 0x56, 0x5b, 0x51, 0x06, 0x69, 0xd6, 0x42, 0xe0, 0xef, 0x91, 0x00, 0x9b,
	0xae, 0x7f, 0x1b, 0x13, 0x16, 0x9c, 0xa6, 0x4f, 0xcc, 0xe0, 0x0e, 0xe4, 0xe7, 0x3c, 0x04, 0x0e,
	0xff, 0x13, 0x20, 0x53, 0xa7, 0xfa, 0xb9, 0xdd, 0xd5, 0x18, 0x6a, 0xb8, 0x33, 0x5c, 0xfc, 0x11,
	0xd6, 0x34, 0x87, 0xf5, 0xf0, 0xf8, 0x26, 0xde, 0xe9, 0x6c, 0x02, 0x15, 0x7f, 0x82, 0x94, 0xf7,
	0x16, 0xe0, 0x86, 0x76, 0x16, 0x1a, 0xf2, 0x48, 0xb8, 0x0b, 0xbe, 0xa1, 0x9c, 0x1e, 0x2b, 0x9f,
	0xb4, 0x2a, 0xe6, 0x61, 0x7b, 0x46, 0x95, 0xaf, 0xf8, 0xf4, 0x6d, 0x12, 0x12, 0x75, 0xaa, 0x8b,
	0x7d, 0xc8, 0xcc, 0xbe, 0x5f, 0xbe, 0x5a, 0x48, 0x38, 0x3f, 0x43, 0x65, 0x35, 0x22, 0xd0, 0x27,
	0x15, 0x5b, 0xb0, 0x1e, 0x1e, 0xb4, 0x5f, 0x2c, 0xdb, 0x1f, 0x02, 0xc9, 0xdf, 0x46, 0x00, 0x05,
	0x04, 0x16, 0x64, 0xe7, 0xa6, 0x56, 0xe9, 0x2e, 0x95, 0x3e, 0x52, 0xfe, 0x3e, 0x2a, 0x32, 0xe0,
	0x43, 0xb0, 0x31, 0x7d, 0x6b, 0xbf, 0x5c, 0xd6, 0x62, 0x0a, 0x26, 0x1f, 0x47, 0x82, 0x05, 0x34,
	0x3d, 0x48, 0xcf, 0x5c, 0x9e, 0xa3, 0xe5, 0x52, 0xc3, 0x38, 0x59, 0x89, 0x86, 0x0b, 0x98, 0xda,
	0xf0, 0xd9, 0xd4, 0x21, 0x3e, 0x5c, 0xb6, 0x3f, 0x8c, 0x92, 0xbf, 0x8b, 0x82, 0xf2, 0x39, 0xaa,
	0xd5, 0xab, 0x9b, 0x82, 0x70, 0x7d, 0x53, 0x10, 0x5e, 0xde, 0x14, 0x84, 0x7f, 0x6f, 0x0b, 0xb1,
	0xeb, 0xdb, 0x42, 0xec, 0xf9, 0x6d, 0x21, 0xf6, 0x67, 0x49, 0x37, 0x58, 0xcf, 0x69, 0x2b, 0x1d,
	0x6c, 0xf2, 0x4f, 0x2d, 0xfe, 0x73, 0x4c, 0xbb, 0x7d, 0xf5, 0xc2, 0xfd, 0x54, 0x62, 0x23, 0x1b,
	0xd1, 0x76, 0xca, 0x1d, 0xd4, 0x3f, 0xbc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x81, 0x35, 0xc9, 0x99,
	0x03, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// RegisterBuilder defines a method for registering an off-chain builder.
	RegisterBuilder(ctx context.Context, in *MsgRegisterBuilder, opts ...grpc.CallOption) (*MsgRegisterBuilderResponse, error)
	// EditBuilder defines a method for editing an off-chain builder.
	EditBuilder(ctx context.Context, in *MsgEditBuilder, opts ...grpc.CallOption) (*MsgEditBuilderResponse, error)
	// RegisterProposer defines a method for registering a proposer for off-chain building.
	RegisterProposer(ctx context.Context, in *MsgRegisterProposer, opts ...grpc.CallOption) (*MsgRegisterProposerResponse, error)
	// CommitSegment defines a method for committing a builder segment which also
	// transfers their promised payment to the builder module address.
	CommitSegment(ctx context.Context, in *MsgCommitSegment, opts ...grpc.CallOption) (*MsgCommitSegmentResponse, error)
	// ReportProposer defines a method for a builder to submit evidence
	// that a proposer didn't honour its proposer commitment.
	ReportProposer(ctx context.Context, in *MsgReportProposer, opts ...grpc.CallOption) (*MsgReportProposerResponse, error)
	// UpdateParams defines a governance operation for updating the x/mev module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterBuilder(ctx context.Context, in *MsgRegisterBuilder, opts ...grpc.CallOption) (*MsgRegisterBuilderResponse, error) {
	out := new(MsgRegisterBuilderResponse)
	err := c.cc.Invoke(ctx, "/cosmos.mev.v1alpha1.Msg/RegisterBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditBuilder(ctx context.Context, in *MsgEditBuilder, opts ...grpc.CallOption) (*MsgEditBuilderResponse, error) {
	out := new(MsgEditBuilderResponse)
	err := c.cc.Invoke(ctx, "/cosmos.mev.v1alpha1.Msg/EditBuilder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RegisterProposer(ctx context.Context, in *MsgRegisterProposer, opts ...grpc.CallOption) (*MsgRegisterProposerResponse, error) {
	out := new(MsgRegisterProposerResponse)
	err := c.cc.Invoke(ctx, "/cosmos.mev.v1alpha1.Msg/RegisterProposer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CommitSegment(ctx context.Context, in *MsgCommitSegment, opts ...grpc.CallOption) (*MsgCommitSegmentResponse, error) {
	out := new(MsgCommitSegmentResponse)
	err := c.cc.Invoke(ctx, "/cosmos.mev.v1alpha1.Msg/CommitSegment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReportProposer(ctx context.Context, in *MsgReportProposer, opts ...grpc.CallOption) (*MsgReportProposerResponse, error) {
	out := new(MsgReportProposerResponse)
	err := c.cc.Invoke(ctx, "/cosmos.mev.v1alpha1.Msg/ReportProposer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/cosmos.mev.v1alpha1.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// RegisterBuilder defines a method for registering an off-chain builder.
	RegisterBuilder(context.Context, *MsgRegisterBuilder) (*MsgRegisterBuilderResponse, error)
	// EditBuilder defines a method for editing an off-chain builder.
	EditBuilder(context.Context, *MsgEditBuilder) (*MsgEditBuilderResponse, error)
	// RegisterProposer defines a method for registering a proposer for off-chain building.
	RegisterProposer(context.Context, *MsgRegisterProposer) (*MsgRegisterProposerResponse, error)
	// CommitSegment defines a method for committing a builder segment which also
	// transfers their promised payment to the builder module address.
	CommitSegment(context.Context, *MsgCommitSegment) (*MsgCommitSegmentResponse, error)
	// ReportProposer defines a method for a builder to submit evidence
	// that a proposer didn't honour its proposer commitment.
	ReportProposer(context.Context, *MsgReportProposer) (*MsgReportProposerResponse, error)
	// UpdateParams defines a governance operation for updating the x/mev module
	// parameters. The authority defaults to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterBuilder(ctx context.Context, req *MsgRegisterBuilder) (*MsgRegisterBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterBuilder not implemented")
}
func (*UnimplementedMsgServer) EditBuilder(ctx context.Context, req *MsgEditBuilder) (*MsgEditBuilderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditBuilder not implemented")
}
func (*UnimplementedMsgServer) RegisterProposer(ctx context.Context, req *MsgRegisterProposer) (*MsgRegisterProposerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterProposer not implemented")
}
func (*UnimplementedMsgServer) CommitSegment(ctx context.Context, req *MsgCommitSegment) (*MsgCommitSegmentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitSegment not implemented")
}
func (*UnimplementedMsgServer) ReportProposer(ctx context.Context, req *MsgReportProposer) (*MsgReportProposerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportProposer not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterBuilder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.mev.v1alpha1.Msg/RegisterBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterBuilder(ctx, req.(*MsgRegisterBuilder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditBuilder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditBuilder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditBuilder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.mev.v1alpha1.Msg/EditBuilder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditBuilder(ctx, req.(*MsgEditBuilder))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RegisterProposer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterProposer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterProposer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.mev.v1alpha1.Msg/RegisterProposer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterProposer(ctx, req.(*MsgRegisterProposer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CommitSegment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCommitSegment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CommitSegment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.mev.v1alpha1.Msg/CommitSegment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CommitSegment(ctx, req.(*MsgCommitSegment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReportProposer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReportProposer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReportProposer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.mev.v1alpha1.Msg/ReportProposer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReportProposer(ctx, req.(*MsgReportProposer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmos.mev.v1alpha1.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cosmos.mev.v1alpha1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterBuilder",
			Handler:    _Msg_RegisterBuilder_Handler,
		},
		{
			MethodName: "EditBuilder",
			Handler:    _Msg_EditBuilder_Handler,
		},
		{
			MethodName: "RegisterProposer",
			Handler:    _Msg_RegisterProposer_Handler,
		},
		{
			MethodName: "CommitSegment",
			Handler:    _Msg_CommitSegment_Handler,
		},
		{
			MethodName: "ReportProposer",
			Handler:    _Msg_ReportProposer_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmos/mev/v1alpha1/tx.proto",
}

func (m *MsgRegisterBuilder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterBuilder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterBuilder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SecurityContact) > 0 {
		i -= len(m.SecurityContact)
		copy(dAtA[i:], m.SecurityContact)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SecurityContact)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.BuilderApiUrl) > 0 {
		i -= len(m.BuilderApiUrl)
		copy(dAtA[i:], m.BuilderApiUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuilderApiUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BuilderApiVersion) > 0 {
		i -= len(m.BuilderApiVersion)
		copy(dAtA[i:], m.BuilderApiVersion)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuilderApiVersion)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterBuilderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterBuilderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterBuilderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgEditBuilder) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditBuilder) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditBuilder) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.SecurityContact) > 0 {
		i -= len(m.SecurityContact)
		copy(dAtA[i:], m.SecurityContact)
		i = encodeVarintTx(dAtA, i, uint64(len(m.SecurityContact)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.BuilderApiUrl) > 0 {
		i -= len(m.BuilderApiUrl)
		copy(dAtA[i:], m.BuilderApiUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuilderApiUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.BuilderApiVersion) > 0 {
		i -= len(m.BuilderApiVersion)
		copy(dAtA[i:], m.BuilderApiVersion)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuilderApiVersion)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditBuilderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditBuilderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditBuilderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRegisterProposer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterProposer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterProposer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.OperatorPubkey != nil {
		{
			size, err := m.OperatorPubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.OperatorAddress) > 0 {
		i -= len(m.OperatorAddress)
		copy(dAtA[i:], m.OperatorAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OperatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Pubkey != nil {
		{
			size, err := m.Pubkey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterProposerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterProposerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterProposerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCommitSegment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCommitSegment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCommitSegment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Commitment.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.BuilderAddress) > 0 {
		i -= len(m.BuilderAddress)
		copy(dAtA[i:], m.BuilderAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuilderAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCommitSegmentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCommitSegmentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCommitSegmentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgReportProposer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReportProposer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReportProposer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Commitment.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.BuilderAddress) > 0 {
		i -= len(m.BuilderAddress)
		copy(dAtA[i:], m.BuilderAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BuilderAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReportProposerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReportProposerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReportProposerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterBuilder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BuilderApiVersion)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BuilderApiUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SecurityContact)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterBuilderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgEditBuilder) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BuilderApiVersion)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BuilderApiUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.SecurityContact)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditBuilderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRegisterProposer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Pubkey != nil {
		l = m.Pubkey.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OperatorAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.OperatorPubkey != nil {
		l = m.OperatorPubkey.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterProposerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCommitSegment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BuilderAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Commitment.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCommitSegmentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgReportProposer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BuilderAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Commitment.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgReportProposerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterBuilder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterBuilder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterBuilder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderApiVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderApiVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityContact", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecurityContact = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterBuilderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterBuilderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterBuilderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditBuilder) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditBuilder: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditBuilder: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderApiVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderApiVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityContact", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecurityContact = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditBuilderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditBuilderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditBuilderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterProposer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterProposer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterProposer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Pubkey == nil {
				m.Pubkey = &types.Any{}
			}
			if err := m.Pubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OperatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OperatorPubkey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.OperatorPubkey == nil {
				m.OperatorPubkey = &types.Any{}
			}
			if err := m.OperatorPubkey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterProposerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterProposerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterProposerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCommitSegment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCommitSegment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCommitSegment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commitment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Commitment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCommitSegmentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCommitSegmentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCommitSegmentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReportProposer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReportProposer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReportProposer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BuilderAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BuilderAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Commitment", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Commitment.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReportProposerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReportProposerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReportProposerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
